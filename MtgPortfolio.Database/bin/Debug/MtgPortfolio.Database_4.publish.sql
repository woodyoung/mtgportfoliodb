/*
Deployment script for MtgPortfolio

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MtgPortfolio"
:setvar DefaultFilePrefix "MtgPortfolio"
:setvar DefaultDataPath "C:\Users\wyoung\AppData\Local\Microsoft\VisualStudio\SSDT"
:setvar DefaultLogPath "C:\Users\wyoung\AppData\Local\Microsoft\VisualStudio\SSDT"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[DF_MtgCard_ConvertedManaCost]...';


GO
ALTER TABLE [dbo].[MtgCard] DROP CONSTRAINT [DF_MtgCard_ConvertedManaCost];


GO
PRINT N'Dropping [dbo].[DF_MtgCard_ManaCost]...';


GO
ALTER TABLE [dbo].[MtgCard] DROP CONSTRAINT [DF_MtgCard_ManaCost];


GO
PRINT N'Dropping [dbo].[FK_MtgCard_Layout]...';


GO
ALTER TABLE [dbo].[MtgCard] DROP CONSTRAINT [FK_MtgCard_Layout];


GO
PRINT N'Dropping [dbo].[FK_MtgCard_Rarity]...';


GO
ALTER TABLE [dbo].[MtgCard] DROP CONSTRAINT [FK_MtgCard_Rarity];


GO
PRINT N'Dropping [dbo].[FK_MtgCard_Set]...';


GO
ALTER TABLE [dbo].[MtgCard] DROP CONSTRAINT [FK_MtgCard_Set];


GO
PRINT N'Dropping [dbo].[FK_MtgCardSets_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardSets] DROP CONSTRAINT [FK_MtgCardSets_MtgCard];


GO
PRINT N'Dropping [dbo].[FK_MtgCardSubtypes_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardSubtypes] DROP CONSTRAINT [FK_MtgCardSubtypes_MtgCard];


GO
PRINT N'Dropping [dbo].[FK_MtgCardTypes_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardTypes] DROP CONSTRAINT [FK_MtgCardTypes_MtgCard];


GO
PRINT N'Dropping [dbo].[FK_MtgCardColors_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardColors] DROP CONSTRAINT [FK_MtgCardColors_MtgCard];


GO
PRINT N'Dropping [dbo].[FK_MtgCardLegalities_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardLegalities] DROP CONSTRAINT [FK_MtgCardLegalities_MtgCard];


GO
PRINT N'Starting rebuilding table [dbo].[MtgCard]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_MtgCard] (
    [MtgCardId]         INT             IDENTITY (1, 1) NOT NULL,
    [MtgJsonId]         VARCHAR (50)    NULL,
    [LayoutId]          INT             NOT NULL,
    [Name]              VARCHAR (160)   NULL,
    [ManaCost]          VARCHAR (20)    CONSTRAINT [DF_MtgCard_ManaCost] DEFAULT '' NOT NULL,
    [ConvertedManaCost] DECIMAL (5, 2)  CONSTRAINT [DF_MtgCard_ConvertedManaCost] DEFAULT 0 NOT NULL,
    [Type]              VARCHAR (100)   NULL,
    [RarityId]          INT             NOT NULL,
    [Text]              NVARCHAR (1000) NULL,
    [Flavor]            VARCHAR (1000)  NULL,
    [Artist]            VARCHAR (100)   NULL,
    [Number]            VARCHAR (10)    NULL,
    [Power]             DECIMAL (5, 2)  NULL,
    [Toughness]         DECIMAL (5, 2)  NULL,
    [Loyalty]           DECIMAL (5, 2)  NULL,
    [MultiverseId]      BIGINT          NULL,
    [IsTimeShifted]     BIT             CONSTRAINT [DF_MtgCard_IsTimeShifted] DEFAULT 0 NOT NULL,
    [IsReserved]        BIT             CONSTRAINT [DF_MtgCard_IsReserved] DEFAULT 0 NOT NULL,
    [ReleaseDate]       DATE            NULL,
    [IsStarter]         BIT             CONSTRAINT [DF_MtgCard_IsStarter] DEFAULT 0 NOT NULL,
    [OriginalText]      VARCHAR (1000)  NULL,
    [OriginalType]      NVARCHAR (100)  NULL,
    [Source]            VARCHAR (200)   NULL,
    [SetId]             INT             NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_MtgCardId1] PRIMARY KEY CLUSTERED ([MtgCardId] ASC) ON [PRIMARY]
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[MtgCard])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MtgCard] ON;
        INSERT INTO [dbo].[tmp_ms_xx_MtgCard] ([MtgCardId], [Artist], [ConvertedManaCost], [MtgJsonId], [LayoutId], [ManaCost], [MultiverseId], [Name], [Number], [OriginalText], [OriginalType], [Power], [Toughness], [RarityId], [Type], [Text], [SetId])
        SELECT   [MtgCardId],
                 [Artist],
                 [ConvertedManaCost],
                 [MtgJsonId],
                 [LayoutId],
                 [ManaCost],
                 [MultiverseId],
                 [Name],
                 [Number],
                 [OriginalText],
                 [OriginalType],
                 [Power],
                 [Toughness],
                 [RarityId],
                 [Type],
                 [Text],
                 [SetId]
        FROM     [dbo].[MtgCard]
        ORDER BY [MtgCardId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MtgCard] OFF;
    END

DROP TABLE [dbo].[MtgCard];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_MtgCard]', N'MtgCard';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_MtgCardId1]', N'PK_MtgCardId', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [Codes].[Supertype]...';


GO
CREATE TABLE [Codes].[Supertype] (
    [SupertypeId] INT          IDENTITY (1, 1) NOT NULL,
    [Code]        VARCHAR (20) NOT NULL,
    [Name]        VARCHAR (50) NOT NULL,
    [Description] VARCHAR (50) NOT NULL,
    [CreatedBy]   VARCHAR (50) NOT NULL,
    [CreatedOn]   DATETIME     NOT NULL,
    [UpdatedBy]   VARCHAR (50) NOT NULL,
    [UpdatedOn]   DATETIME     NOT NULL,
    [IsActive]    BIT          NOT NULL,
    CONSTRAINT [PK_SupertypeId] PRIMARY KEY CLUSTERED ([SupertypeId] ASC) ON [PRIMARY]
);


GO
PRINT N'Creating [dbo].[MtgCardSupertypes]...';


GO
CREATE TABLE [dbo].[MtgCardSupertypes] (
    [MtgCardSupertypesId] INT IDENTITY (1, 1) NOT NULL,
    [MtgCardId]           INT NOT NULL,
    [SupertypeId]         INT NOT NULL
);


GO
PRINT N'Creating [Codes].[DF_Supertype_CreatedBy]...';


GO
ALTER TABLE [Codes].[Supertype]
    ADD CONSTRAINT [DF_Supertype_CreatedBy] DEFAULT (suser_name()) FOR [CreatedBy];


GO
PRINT N'Creating [Codes].[DF_Supertype_CreatedOn]...';


GO
ALTER TABLE [Codes].[Supertype]
    ADD CONSTRAINT [DF_Supertype_CreatedOn] DEFAULT (getdate()) FOR [CreatedOn];


GO
PRINT N'Creating [Codes].[DF_Supertype_UpdatedBy]...';


GO
ALTER TABLE [Codes].[Supertype]
    ADD CONSTRAINT [DF_Supertype_UpdatedBy] DEFAULT (suser_name()) FOR [UpdatedBy];


GO
PRINT N'Creating [Codes].[DF_Supertype_UpdatedOn]...';


GO
ALTER TABLE [Codes].[Supertype]
    ADD CONSTRAINT [DF_Supertype_UpdatedOn] DEFAULT (getdate()) FOR [UpdatedOn];


GO
PRINT N'Creating unnamed constraint on [Codes].[Supertype]...';


GO
ALTER TABLE [Codes].[Supertype]
    ADD DEFAULT ((1)) FOR [IsActive];


GO
PRINT N'Creating [dbo].[FK_MtgCard_Layout]...';


GO
ALTER TABLE [dbo].[MtgCard] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCard_Layout] FOREIGN KEY ([LayoutId]) REFERENCES [Codes].[Layout] ([LayoutId]);


GO
PRINT N'Creating [dbo].[FK_MtgCard_Rarity]...';


GO
ALTER TABLE [dbo].[MtgCard] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCard_Rarity] FOREIGN KEY ([RarityId]) REFERENCES [Codes].[Rarity] ([RarityId]);


GO
PRINT N'Creating [dbo].[FK_MtgCard_Set]...';


GO
ALTER TABLE [dbo].[MtgCard] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCard_Set] FOREIGN KEY ([SetId]) REFERENCES [Codes].[Set] ([SetId]);


GO
PRINT N'Creating [dbo].[FK_MtgCardSets_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardSets] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCardSets_MtgCard] FOREIGN KEY ([MtgCardId]) REFERENCES [dbo].[MtgCard] ([MtgCardId]);


GO
PRINT N'Creating [dbo].[FK_MtgCardSubtypes_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardSubtypes] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCardSubtypes_MtgCard] FOREIGN KEY ([MtgCardId]) REFERENCES [dbo].[MtgCard] ([MtgCardId]);


GO
PRINT N'Creating [dbo].[FK_MtgCardTypes_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardTypes] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCardTypes_MtgCard] FOREIGN KEY ([MtgCardId]) REFERENCES [dbo].[MtgCard] ([MtgCardId]);


GO
PRINT N'Creating [dbo].[FK_MtgCardColors_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardColors] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCardColors_MtgCard] FOREIGN KEY ([MtgCardId]) REFERENCES [dbo].[MtgCard] ([MtgCardId]);


GO
PRINT N'Creating [dbo].[FK_MtgCardLegalities_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardLegalities] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCardLegalities_MtgCard] FOREIGN KEY ([MtgCardId]) REFERENCES [dbo].[MtgCard] ([MtgCardId]);


GO
PRINT N'Creating [dbo].[FK_MtgCardSupertypes_Type]...';


GO
ALTER TABLE [dbo].[MtgCardSupertypes] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCardSupertypes_Type] FOREIGN KEY ([SupertypeId]) REFERENCES [Codes].[Supertype] ([SupertypeId]);


GO
PRINT N'Creating [dbo].[FK_MtgCardSupertypes_MtgCard]...';


GO
ALTER TABLE [dbo].[MtgCardSupertypes] WITH NOCHECK
    ADD CONSTRAINT [FK_MtgCardSupertypes_MtgCard] FOREIGN KEY ([MtgCardId]) REFERENCES [dbo].[MtgCard] ([MtgCardId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[MtgCard] WITH CHECK CHECK CONSTRAINT [FK_MtgCard_Layout];

ALTER TABLE [dbo].[MtgCard] WITH CHECK CHECK CONSTRAINT [FK_MtgCard_Rarity];

ALTER TABLE [dbo].[MtgCard] WITH CHECK CHECK CONSTRAINT [FK_MtgCard_Set];

ALTER TABLE [dbo].[MtgCardSets] WITH CHECK CHECK CONSTRAINT [FK_MtgCardSets_MtgCard];

ALTER TABLE [dbo].[MtgCardSubtypes] WITH CHECK CHECK CONSTRAINT [FK_MtgCardSubtypes_MtgCard];

ALTER TABLE [dbo].[MtgCardTypes] WITH CHECK CHECK CONSTRAINT [FK_MtgCardTypes_MtgCard];

ALTER TABLE [dbo].[MtgCardColors] WITH CHECK CHECK CONSTRAINT [FK_MtgCardColors_MtgCard];

ALTER TABLE [dbo].[MtgCardLegalities] WITH CHECK CHECK CONSTRAINT [FK_MtgCardLegalities_MtgCard];

ALTER TABLE [dbo].[MtgCardSupertypes] WITH CHECK CHECK CONSTRAINT [FK_MtgCardSupertypes_Type];

ALTER TABLE [dbo].[MtgCardSupertypes] WITH CHECK CHECK CONSTRAINT [FK_MtgCardSupertypes_MtgCard];


GO
PRINT N'Update complete.';


GO
